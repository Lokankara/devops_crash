Logging setup to docker_.log
The Docker Engine you're using is running in swarm mode.

Compose does not use swarm mode to deploy services to multiple nodes in a swarm. All containers will be scheduled on the current node.

To deploy your application across the swarm, use `docker stack deploy`.

Building python
Step 1/9 : FROM python:3-slim
 ---> 972ef8de24a4
Step 2/9 : COPY db.py /opt/app/db.py
 ---> Using cache
 ---> 07fbb95c28f2
Step 3/9 : COPY sql_orm.py /opt/app/sql_orm.py
 ---> Using cache
 ---> a565c8593bfb
Step 4/9 : COPY requirements.txt /opt/app/requirements.txt
 ---> Using cache
 ---> d8d3901a1de8
Step 5/9 : WORKDIR /opt/app
 ---> Using cache
 ---> 763572b3cac4
Step 6/9 : VOLUME /opt/app
 ---> Using cache
 ---> 54001f85fea5
Step 7/9 : RUN pip install --upgrade pip && pip install -r requirements.txt
 ---> Running in 4a12f09f30cb
Requirement already satisfied: pip in /usr/local/lib/python3.9/site-packages (21.0.1)
Collecting certifi==2020.12.5
  Downloading certifi-2020.12.5-py2.py3-none-any.whl (147 kB)
Collecting chardet==4.0.0
  Downloading chardet-4.0.0-py2.py3-none-any.whl (178 kB)
Collecting et-xmlfile==1.0.1
  Downloading et_xmlfile-1.0.1.tar.gz (8.4 kB)
Collecting idna==2.10
  Downloading idna-2.10-py2.py3-none-any.whl (58 kB)
Collecting jdcal==1.4.1
  Downloading jdcal-1.4.1-py2.py3-none-any.whl (9.5 kB)
Collecting numpy==1.20.1
  Downloading numpy-1.20.1-cp39-cp39-manylinux2010_x86_64.whl (15.4 MB)
Collecting openpyxl==3.0.6
  Downloading openpyxl-3.0.6-py2.py3-none-any.whl (242 kB)
Collecting pandas==1.2.2
  Downloading pandas-1.2.2-cp39-cp39-manylinux1_x86_64.whl (9.7 MB)
Collecting python-dateutil==2.8.1
  Downloading python_dateutil-2.8.1-py2.py3-none-any.whl (227 kB)
Collecting pytz==2021.1
  Downloading pytz-2021.1-py2.py3-none-any.whl (510 kB)
Collecting requests==2.25.1
  Downloading requests-2.25.1-py2.py3-none-any.whl (61 kB)
Collecting six==1.15.0
  Downloading six-1.15.0-py2.py3-none-any.whl (10 kB)
Collecting SQLAlchemy==1.3.23
  Downloading SQLAlchemy-1.3.23-cp39-cp39-manylinux2010_x86_64.whl (1.3 MB)
Collecting urllib3==1.26.3
  Downloading urllib3-1.26.3-py2.py3-none-any.whl (137 kB)
Collecting paramiko==2.7.2
  Downloading paramiko-2.7.2-py2.py3-none-any.whl (206 kB)
Collecting cryptography>=2.5
  Downloading cryptography-3.4.7-cp36-abi3-manylinux2014_x86_64.whl (3.2 MB)
Collecting pynacl>=1.0.1
  Downloading PyNaCl-1.4.0-cp35-abi3-manylinux1_x86_64.whl (961 kB)
Collecting bcrypt>=3.1.3
  Downloading bcrypt-3.2.0-cp36-abi3-manylinux2010_x86_64.whl (63 kB)
Collecting cffi>=1.1
  Downloading cffi-1.14.5-cp39-cp39-manylinux1_x86_64.whl (406 kB)
Collecting pycparser
  Downloading pycparser-2.20-py2.py3-none-any.whl (112 kB)
Building wheels for collected packages: et-xmlfile
  Building wheel for et-xmlfile (setup.py): started
  Building wheel for et-xmlfile (setup.py): finished with status 'done'
  Created wheel for et-xmlfile: filename=et_xmlfile-1.0.1-py3-none-any.whl size=8913 sha256=5f5d47037125ed5d370e86b8fbecc6416fd35d578f0be20ee9fddf4ee7c924bf
  Stored in directory: /root/.cache/pip/wheels/bb/9b/ff/8fdf015c95a57224237bf88fbb9e45237cbe8177213bc13732
Successfully built et-xmlfile
Installing collected packages: pycparser, six, cffi, urllib3, pytz, python-dateutil, pynacl, numpy, jdcal, idna, et-xmlfile, cryptography, chardet, certifi, bcrypt, SQLAlchemy, requests, paramiko, pandas, openpyxl
Successfully installed SQLAlchemy-1.3.23 bcrypt-3.2.0 certifi-2020.12.5 cffi-1.14.5 chardet-4.0.0 cryptography-3.4.7 et-xmlfile-1.0.1 idna-2.10 jdcal-1.4.1 numpy-1.20.1 openpyxl-3.0.6 pandas-1.2.2 paramiko-2.7.2 pycparser-2.20 pynacl-1.4.0 python-dateutil-2.8.1 pytz-2021.1 requests-2.25.1 six-1.15.0 urllib3-1.26.3
Removing intermediate container 4a12f09f30cb
 ---> 11b49a62bea2
Step 8/9 : RUN pip install --upgrade pip && pip install paramiko
 ---> Running in e2a744c3e858
